openapi: 3.0.1.

info:
  version: '1.0.0'
  title: 'PinkFilm API'
  x-logo:
    url: './logo-pink-film.svg'

servers:
  - url: 'https://server_ip'
    description: 'Production Server'

tags:
  - name: 'location'
  - name: 'reservation'
  - name: 'user'

security:
  - passwordAutentication: []

paths:
  /locations:
    get:
      tags:
        - 'location'
      summary: 'Endpoint for retrieve platform locations'
      parameters:
        $ref: './parameters/location-list.json'
      responses:
        200:
          description: 'Get the locations that upload the users'
          content:
            application/json:
              schema:
                type: 'array'
                items:
                  $ref: './schemas/location-list.json'
    post:
      tags:
        - 'location'
      summary: 'Endpoint for create a location'
      requestBody:
        description: 'Create a location'
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/location-create.json'
      responses:
        200:
          description: 'Get the token for auth'
          content:
            application/json:
              schema:
                $ref: './schemas/token.json'
  /reservations:
    post:
      tags:
        - 'reservation'
      summary: 'Endpoint for create a reservation'
      requestBody:
        description: 'Create a reservation'
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/reservation-create.json'
      responses:
        200:
          description: 'Create a reservation request from a user'
          content:
            application/json:
              schema:
                $ref: './schemas/reservation.json'
  /locations/{location}:
    get:
      tags:
        - 'location'
      summary: 'Endpoint for retrieve a location'
      responses:
        200:
          description: 'Get a location'
          content:
            application/json:
              schema:
                type: 'object'
                $ref: './schemas/location.json'
  /oauth/token:
    post:
      tags:
        - 'user'
      summary: 'Endpoint for auth user'
      requestBody:
        description: 'Get bearer token from user/pass'
        required: true
        content:
          application/json:
            schema:
              $ref: './schemas/oauth-token.json'
      responses:
        200:
          description: 'Get the token for auth'
          content:
            application/json:
              schema:
                $ref: './schemas/token.json'

components:
  securitySchemes:
    passwordAutentication:
      type: oauth2
      flows:
        password:
          tokenUrl: /oauth/token
          scopes: {}
